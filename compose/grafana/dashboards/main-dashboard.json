{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": false,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 2,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 25,
      "panels": [],
      "title": "Sensor Group",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "purple",
                "value": null
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 0,
        "y": 1
      },
      "id": 2,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HUM\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n  ",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Humidity (Mean)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "purple",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": -1,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 75,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 4,
        "y": 1
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HUM\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Humidity (Timeline)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-purple",
            "mode": "fixed"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 16,
        "y": 1
      },
      "id": 12,
      "options": {
        "displayMode": "lcd",
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "maxVizHeight": 300,
        "minVizHeight": 10,
        "minVizWidth": 0,
        "namePlacement": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "sizing": "auto",
        "text": {},
        "valueMode": "color"
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HUM\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_group\", \"sensor_id\", \"_field\"])\r\n  |> aggregateWindow(every: 5s, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket(\r\n    '${__interval}',\r\n    to_timestamp(ts :: bigint / 1000)\r\n  ) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sensor Distrubution (Latest)",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "max": 40,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 0,
        "y": 8
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TMP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'tmp'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Temperture (Mean)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 75,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 4,
        "y": 8
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TMP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket(\r\n    '${__interval}',\r\n    to_timestamp(ts :: bigint / 1000)\r\n  ) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Temperture (Timeline)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 16,
        "y": 8
      },
      "id": 13,
      "options": {
        "displayMode": "lcd",
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "maxVizHeight": 300,
        "minVizHeight": 10,
        "minVizWidth": 0,
        "namePlacement": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "sizing": "auto",
        "text": {},
        "valueMode": "color"
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TMP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_group\", \"sensor_id\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket(\r\n    '${__interval}',\r\n    to_timestamp(ts :: bigint / 1000)\r\n  ) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sensor Distrubution (Latest)",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "yellow",
                "value": null
              }
            ]
          },
          "unit": "lux"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 0,
        "y": 15
      },
      "id": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ILL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket(\r\n    '${__interval}',\r\n    to_timestamp(ts :: bigint / 1000)\r\n  ) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Illumination (Mean)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-yellow",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 75,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "lux"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 4,
        "y": 15
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ILL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket(\r\n    '${__interval}',\r\n    to_timestamp(ts :: bigint / 1000)\r\n  ) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Illumination (Timeline)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-yellow",
            "mode": "fixed"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "lux"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 16,
        "y": 15
      },
      "id": 14,
      "options": {
        "displayMode": "lcd",
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "maxVizHeight": 300,
        "minVizHeight": 10,
        "minVizWidth": 0,
        "namePlacement": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "sizing": "auto",
        "text": {},
        "valueMode": "color"
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ILL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_group\", \"sensor_id\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket(\r\n    '${__interval}',\r\n    to_timestamp(ts :: bigint / 1000)\r\n  ) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sensor Distrubution (Latest)",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 4,
        "x": 0,
        "y": 22
      },
      "id": 22,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CO2\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'co2'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "CO2 (Mean)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "cee1kfry577r4c"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 75,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "light-yellow",
                "value": 1000
              },
              {
                "color": "dark-yellow",
                "value": 1250
              },
              {
                "color": "red",
                "value": 1500
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 20,
        "x": 4,
        "y": 22
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CO2\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'co2'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "CO2 (Timeline)",
      "transparent": true,
      "type": "timeseries"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "office",
          "value": "office"
        },
        "definition": "SELECT DISTINCT(device_group) FROM ts_kv_latest;",
        "name": "device_group",
        "options": [],
        "query": "SELECT DISTINCT(device_group) FROM ts_kv_latest;",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "office",
          "value": "office"
        },
        "definition": "SELECT DISTINCT(device_name) FROM ts_kv_latest;",
        "name": "device_name",
        "options": [],
        "query": "SELECT DISTINCT(device_name) FROM ts_kv_latest;",
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h"
    ]
  },
  "timezone": "browser",
  "title": "Home Monitor 2",
  "uid": "WMK5eaMVk2",
  "version": 16,
  "weekStart": ""
}
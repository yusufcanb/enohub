{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 25,
      "panels": [],
      "repeat": "device_group",
      "title": "${device_group}",
      "type": "row"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "max": 40,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 0,
        "y": 1
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "same_as_value",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": true,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TMP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts::bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) AS value\r\nFROM ts_kv\r\nWHERE\r\n  key = 'tmp'\r\n  AND ts >= EXTRACT(EPOCH FROM NOW() - INTERVAL '1 hour') * 1000\r\n  AND ts < EXTRACT(EPOCH FROM NOW()) * 1000\r\n  AND device_group = '${device_group}'\r\nGROUP BY time\r\nORDER BY time\r\nLIMIT 25;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "timeFrom": "1h",
      "title": "TMP",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 6,
        "y": 1
      },
      "id": 2,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "same_as_value",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": true,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HUM\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n  ",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts::bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) AS value\r\nFROM ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= EXTRACT(EPOCH FROM NOW() - INTERVAL '1 hour') * 1000\r\n  AND ts < EXTRACT(EPOCH FROM NOW()) * 1000\r\n  AND device_group = '${device_group}'\r\nGROUP BY time\r\nORDER BY time\r\nLIMIT 25;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "timeFrom": "1h",
      "title": "HUM",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "lux"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 12,
        "y": 1
      },
      "id": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "same_as_value",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": true,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ILL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts::bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) AS value\r\nFROM ts_kv\r\nWHERE\r\n  key = 'ill'\r\n  AND ts >= EXTRACT(EPOCH FROM NOW() - INTERVAL '1 hour') * 1000\r\n  AND ts < EXTRACT(EPOCH FROM NOW()) * 1000\r\n  AND device_group = '${device_group}'\r\nGROUP BY time\r\nORDER BY time\r\nLIMIT 25;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "timeFrom": "1h",
      "title": "ILL",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 18,
        "y": 1
      },
      "id": 22,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "same_as_value",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": true,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CO2\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'co2'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\n  AND device_group = '${device_group}'\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "timeFrom": "1h",
      "title": "CO2",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 72,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "decimals": 1,
          "fieldMinMax": false,
          "mappings": [],
          "max": 35,
          "min": 12,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              },
              {
                "color": "blue",
                "value": 22
              },
              {
                "color": "red",
                "value": 25
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 6
      },
      "id": 7,
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "time_series",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TMP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'tmp'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\n  AND device_group = '${device_group}'\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "TMP (Timeline)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "fixed",
            "seriesBy": "last"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": -1,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 75,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              },
              {
                "color": "blue",
                "value": 25
              },
              {
                "color": "red",
                "value": 60
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 6
      },
      "id": 10,
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HUM\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'hum'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\n  AND device_group = '${device_group}'\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Humidity (Timeline)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-yellow",
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 75,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 1000,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "lux"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 9,
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ILL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket(\r\n    '${__interval}',\r\n    to_timestamp(ts :: bigint / 1000)\r\n  ) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'ill'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\n  AND device_group = '${device_group}'\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Illumination (Timeline)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 75,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "mappings": [],
          "max": 2000,
          "min": 500,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "blue",
                "value": 1000
              },
              {
                "color": "red",
                "value": 1500
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a800bf2c-cc74-4fab-ac10-84e3fb6c997e"
          },
          "editorMode": "code",
          "format": "table",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CO2\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"sensor_group\"] == \"${sensor_group}\")\r\n  |> drop(columns: [\"sensor_id\", \"sensor_name\", \"_field\"])\r\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  time_bucket('${__interval}', to_timestamp(ts :: bigint / 1000)) AS time,\r\n  avg(COALESCE(long_v, dbl_v)) as value\r\nFROM\r\n  ts_kv\r\nWHERE\r\n  key = 'co2'\r\n  AND ts >= ${__from}\r\n  AND ts < ${__to}\r\n  AND device_group = '${device_group}'\r\nGROUP BY\r\n  time\r\nORDER BY\r\n  time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "CO2 (Timeline)",
      "transparent": true,
      "type": "timeseries"
    }
  ],
  "preload": false,
  "refresh": "5s",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "allowCustomValue": false,
        "current": {
          "text": "office",
          "value": "office"
        },
        "definition": "SELECT DISTINCT(device_group) FROM ts_kv_latest;",
        "includeAll": false,
        "label": "Device Group",
        "name": "device_group",
        "options": [],
        "query": "SELECT DISTINCT(device_group) FROM ts_kv_latest;",
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "definition": "SELECT DISTINCT(device_name) FROM ts_kv_latest WHERE device_group = ANY(ARRAY[${device_group}]);",
        "hide": 2,
        "includeAll": true,
        "multi": true,
        "name": "device_name",
        "options": [],
        "query": "SELECT DISTINCT(device_name) FROM ts_kv_latest WHERE device_group = ANY(ARRAY[${device_group}]);",
        "refresh": 2,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h"
    ]
  },
  "timezone": "browser",
  "title": "Enohub Default Dashboard",
  "uid": "dee4kcfkiraiod",
  "version": 74,
  "weekStart": ""
}
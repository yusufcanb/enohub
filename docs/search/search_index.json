{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview This project aims to act as an device hub which collects sensor data and puts it into InfluxDB Time-Series database for quick visualization. Hardware Requirements EnOcean STM 550 Multisensor EnOcean USB 3000 Radio Receiver Raspberry Pi 3+ Software Requirements On Raspberry Pi you need them to be installed; Docker Docker Compose External Requirements InfluxDB Grafana (Optional for Visualization) Quick Start First, create the config file, cat << EOF > config.yaml name: office port: /dev/ttyUSB0 devices: - id: 04211ABE name: desk eep: d2-14-41 - id: 04211945 name: table eep: d2-14-41 - id: 051B0025 name: co2-meter eep: a5-09-09 database: url: https://your-influxdb-host:port org: your-org token: your-access-token bucket: your-bucket EOF Then, execute docker command below to start EnOcean Hub docker run --device=/dev/ttyUSB0 -v \"$PWD/config.yaml:/opt/enocean/enohub/config.yaml\" ghcr.io/yusufcanb/enohub:latest","title":"Overview"},{"location":"#overview","text":"This project aims to act as an device hub which collects sensor data and puts it into InfluxDB Time-Series database for quick visualization.","title":"Overview"},{"location":"#hardware-requirements","text":"EnOcean STM 550 Multisensor EnOcean USB 3000 Radio Receiver Raspberry Pi 3+","title":"Hardware Requirements"},{"location":"#software-requirements","text":"On Raspberry Pi you need them to be installed; Docker Docker Compose","title":"Software Requirements"},{"location":"#external-requirements","text":"InfluxDB Grafana (Optional for Visualization)","title":"External Requirements"},{"location":"#quick-start","text":"First, create the config file, cat << EOF > config.yaml name: office port: /dev/ttyUSB0 devices: - id: 04211ABE name: desk eep: d2-14-41 - id: 04211945 name: table eep: d2-14-41 - id: 051B0025 name: co2-meter eep: a5-09-09 database: url: https://your-influxdb-host:port org: your-org token: your-access-token bucket: your-bucket EOF Then, execute docker command below to start EnOcean Hub docker run --device=/dev/ttyUSB0 -v \"$PWD/config.yaml:/opt/enocean/enohub/config.yaml\" ghcr.io/yusufcanb/enohub:latest","title":"Quick Start"},{"location":"configuration/","text":"Configuration Enohub requires a custom declaration file in YAML format in order to configure its parameters. Here is an example configuration file to get started. Parameters Available configuration parameters listed in dedicated sections; Root Object Parameter Description Type name Display name of the sensor group. E.g living-room, kitchen, keller. string port Serial port which EnOcean USB Stick connected. path devices Array of registered devices array database Influx Time-Series database configuration object Device Object The parameters of the device listed below; Parameter Description Type id Universal device identifier. Can be found on the backside of every device. string name A friendly name for the device. string eep EEP of the device. string Database Object The parameters of the InfluxDB configuration listed below; Parameter Description Type url # URL of the influxdb instance. string org Organization name of the account string token Access Token for the client string bucket Bucket name for the data points string Example Configuration name: office port: /dev/ttyUSB0 devices: - id: 04211ABE name: desk eep: d2-14-41 - id: 04211945 name: table eep: d2-14-41 - id: 051B0025 name: co2-meter eep: a5-09-09 database: url: https://your-influxdb-host:port org: your-org token: your-access-token bucket: your-bucket","title":"Configuration"},{"location":"configuration/#configuration","text":"Enohub requires a custom declaration file in YAML format in order to configure its parameters. Here is an example configuration file to get started.","title":"Configuration"},{"location":"configuration/#parameters","text":"Available configuration parameters listed in dedicated sections;","title":"Parameters"},{"location":"configuration/#root-object","text":"Parameter Description Type name Display name of the sensor group. E.g living-room, kitchen, keller. string port Serial port which EnOcean USB Stick connected. path devices Array of registered devices array database Influx Time-Series database configuration object","title":"Root Object"},{"location":"configuration/#device-object","text":"The parameters of the device listed below; Parameter Description Type id Universal device identifier. Can be found on the backside of every device. string name A friendly name for the device. string eep EEP of the device. string","title":"Device Object"},{"location":"configuration/#database-object","text":"The parameters of the InfluxDB configuration listed below; Parameter Description Type url # URL of the influxdb instance. string org Organization name of the account string token Access Token for the client string bucket Bucket name for the data points string","title":"Database Object"},{"location":"configuration/#example-configuration","text":"name: office port: /dev/ttyUSB0 devices: - id: 04211ABE name: desk eep: d2-14-41 - id: 04211945 name: table eep: d2-14-41 - id: 051B0025 name: co2-meter eep: a5-09-09 database: url: https://your-influxdb-host:port org: your-org token: your-access-token bucket: your-bucket","title":"Example Configuration"},{"location":"dashboard/","text":"Grafana Integration Add InfluxDB to Grafana You can follow the Official Guide on the InfluxDB's documentation site in order the add your InfluxDB instance to Grafana. Import Dashboard To import a dashboard click Import under the Dashboards icon in the side menu. Paste the below link into Import via grafana.com , https://raw.githubusercontent.com/yusufcanb/enohub/docs/resources/example-dashboard.json Finally, click the Load button to import the example dashboard.","title":"Grafana"},{"location":"dashboard/#grafana-integration","text":"","title":"Grafana Integration"},{"location":"dashboard/#add-influxdb-to-grafana","text":"You can follow the Official Guide on the InfluxDB's documentation site in order the add your InfluxDB instance to Grafana.","title":"Add InfluxDB to Grafana"},{"location":"dashboard/#import-dashboard","text":"To import a dashboard click Import under the Dashboards icon in the side menu. Paste the below link into Import via grafana.com , https://raw.githubusercontent.com/yusufcanb/enohub/docs/resources/example-dashboard.json Finally, click the Load button to import the example dashboard.","title":"Import Dashboard"},{"location":"installation/","text":"Installation Docker Note for Windows users Docker installation on Windows is not supported since Serial port binding to containers is not possible. Please follow development installation guide for Windows and specify COM ports in the configuration file. Before we begin, you need to have a configuration file. If you don't know how to create configuration files please navigate back to Configuration section. docker run --device=/dev/ttyUSB0 -v \"$PWD/config.yaml:/opt/enocean/enohub/config.yaml\" ghcr.io/yusufcanb/enohub:latest The --device flag indicates the serial port which EnOcean USB 3000 is connected to. This docker argument allows you to run devices inside the container without the --privileged flag. Development For development purposes, you can use the instructions below in order the get start development. First clone the repository, git clone https://github.com/yusufcanb/enohub.git Also pull submodules which is required for transcoding, git submodule update --init Then, using poetry install the dependencies, pip3 install poetry # Skip this if you already have poetry poetry install --no-dev Activate the environment using, poetry shell","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#docker","text":"Note for Windows users Docker installation on Windows is not supported since Serial port binding to containers is not possible. Please follow development installation guide for Windows and specify COM ports in the configuration file. Before we begin, you need to have a configuration file. If you don't know how to create configuration files please navigate back to Configuration section. docker run --device=/dev/ttyUSB0 -v \"$PWD/config.yaml:/opt/enocean/enohub/config.yaml\" ghcr.io/yusufcanb/enohub:latest The --device flag indicates the serial port which EnOcean USB 3000 is connected to. This docker argument allows you to run devices inside the container without the --privileged flag.","title":"Docker"},{"location":"installation/#development","text":"For development purposes, you can use the instructions below in order the get start development. First clone the repository, git clone https://github.com/yusufcanb/enohub.git Also pull submodules which is required for transcoding, git submodule update --init Then, using poetry install the dependencies, pip3 install poetry # Skip this if you already have poetry poetry install --no-dev Activate the environment using, poetry shell","title":"Development"}]}